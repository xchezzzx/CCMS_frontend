@page "/teams"
@attribute [Authorize]

@inject ITeamService TeamService

<PageTitle>Teams page</PageTitle>

<div class="row">

	<div class="col-9 text-center">
		<h1>Teams</h1>
	</div>

	<div class="col-3">
		<div class="d-grid gap-2 d-md-flex justify-content-md-end">
			<button class="btn btn-success" @onclick="fetchData">
				<span class="oi oi-loop-circular" aria-hidden="true"></span>
				<span>&nbsp;Refresh List</span>
			</button>
			<a class="btn btn-primary"
			   href="/teams/add"
			   role="button">
				<span class="oi oi-plus" aria-hidden="true"></span>
				<span>&nbsp;Add team</span>
			</a>
		</div>
	</div>

</div>

@if (!_dataFetched)
{
	<Loader />
}
else
{
	if (teams.Count == 0)
	{
		<EmptyList />
	}
	else
	{
		<div class="table-responsive">
			<table class="table table-striped text-center table-hover">
				<thead class="table-light">
					<tr>
						<th>ID</th>
						<th>Team name</th>
						<th>Pic</th>
						<th>Points</th>
						<th>Created at</th>
						<th>Created by</th>
						<th>Updated at</th>
						<th>Updated by</th>
						<th>Status</th>
					</tr>
				</thead>

				<tbody>

					@foreach (var team in teams)
					{
						<tr>
							<td>@team.Id</td>
							<td><a href="teams/@team.Id">@team.Name</a></td>
							<td>@team.Icon</td>
							<td>@team.SumPoints</td>
							<td>@team.CreateDate.ToString("G")</td>
							<td>@team.CreateUserId</td>
							<td>@team.UpdateDate.ToString("G")</td>
							<td>@team.UpdateUserId</td>
							<td>@((EntityStatuses)team.StatusId)</td>
						</tr>
					}

				</tbody>
			</table>
		</div>
	}
}


@code {

	List<TeamDT> teams = new ();

	private bool _dataFetched;

	////[Parameter]
	////public string Message { get; set; }
	//string messageFromServer = String.Empty;

	protected override async Task OnInitializedAsync()
	{
		_dataFetched = false;
		await fetchData();
	}

	public async Task fetchData()
	{
		_dataFetched = false;
		teams = await TeamService.GetAllTeamsAsync();
		_dataFetched = true;
	}
}