@page "/users"
@attribute [Authorize]

<PageTitle>Users page</PageTitle>

<div class="row d-flex align-items-center">

	<div class="col-8 text-center">
		<h1>Users</h1>
	</div>

	<div class="col-4 text-end">

		<button class="btn btn-secondary" @onclick="Toggle">
			<span class="oi oi-grid-three-up"></span>
			<span>&nbsp;@ToggleCaption</span>
		</button>

		<button class="btn btn-success" @onclick="fetchData">
			<span class="oi oi-loop-circular" aria-hidden="true"></span>
			<span>&nbsp;Refresh List</span>
		</button>

		<a class="btn btn-primary"
		   href="/competitions/add"
		   role="button">
			<span class="oi oi-plus" aria-hidden="true"></span>
			<span>&nbsp;Add user</span>
		</a>
	</div>

</div>

@if (!_dataFetched)
{
	<Loader />
}
else
{
	if (users.Count == 0)
	{
		<EmptyList />
	}
	else
	{
		if (_isTable)
		{
			<div class="table-responsive">
				<table class="table table-striped text-center table-hover">
					<thead class="table-light">
						<tr>
							<th>ID</th>
							<th>First name</th>
							<th>Last name</th>
							<th>E-mail</th>
							<th>Role</th>
							<th>Sum of points</th>
						</tr>
					</thead>

					<tbody>

						@foreach (var user in users)
						{
							<tr>
								<td>@user.Id</td>
								<td>@user.FirstName</td>
								<td>@user.LastName</td>
								<td>@user.Email</td>
								<td>@user.RoleId</td>
								<td>@user.PointsSummary</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		}
		else
		{
			//TODO:make user card!
		}
	}
}


@code {
	private bool _isTable;
	private string ToggleCaption => _isTable ? "Card view" : "Table view";

	private void Toggle()
	{
		_isTable = !_isTable;
	}

	List<UserDT> users = new List<UserDT>();

	private bool _dataFetched;

	protected override async Task OnInitializedAsync()
	{
		_dataFetched = false;
		await fetchData();
	}

	public async Task fetchData()
	{
		Console.WriteLine("Fetching data...");

		_dataFetched = true;
		//users = await CompetitionService.GetAllCompetitionsAsync();
	}
}