@page "/token"

@using System.Threading.Tasks;
@using System.Security.Claims;
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication;
@using BlazorWeb.Services.CurrentUserService;

@inject ICurrentUserService curuser
@inject AuthenticationStateProvider AuthProv

<div>
    @currentUser.FirstName
    @_AccessToken
    <br />
    @foreach (var c in cl)
    {
        <h1>@c.Type @c.Value </h1>
    }
</div>

@code {
    [Inject]
    IAccessTokenProvider TokenProvider { get; set; }

    UserDT currentUser = new();

    public Task<AuthenticationState> AuthTask { get; set; }

    List<Claim> cl = new List<Claim>();

    public string _AccessToken { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var accessTokenResult = await TokenProvider.RequestAccessToken();
        _AccessToken = string.Empty;

        if (accessTokenResult.TryGetToken(out var token))
        {
            _AccessToken = token.Value;
        }

        var claims = await AuthProv.GetAuthenticationStateAsync();
        cl = claims.User.Claims.ToList();

        currentUser = await curuser.GetCurrentUserAsync();
    }
}
